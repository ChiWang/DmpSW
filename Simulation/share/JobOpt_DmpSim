#! /usr/bin/python
'''
 *  $Id: JobOpt_DmpSimulation, 2014-03-10 10:19:48 chi $
 *  Author(s):
 *    Chi WANG (chiwang@mail.ustc.edu.cn) 07/03/2014
 *-----------------------------------------------------
 *  This is an example how to run simulation of DAMPE
 *-----------------------------------------------------
'''

# load lib. of DAMPE software
import os
import sys
if os.environ['DMPSWSYS'] not in sys.path:
    sys.path.append(os.getenv('DMPSWSYS')+'/lib')

import libDmpCore as DmpCore
import libDmpSim as  DmpSim

# set phase
#DmpCore.PhaseManager.SetPhase(DmpCore.DmpEPhase.kQuarter)  # default is kProduct, if NOT set

# RUN simulation
    ##  where to find the macro file which is a argument of Execute(). If NOT set will use "./"
inMacPath=os.getenv('DMPSWSYS')+"/share/Simulation/"        # the test macro file DmpSim_electron(proton).mac installed in there

    ##  where to save the output. If NOT set at here will use "./"
DmpSim.SetOutDataPath("./test")

    ##  Start simulation. ORDER: Initialize(), then Execute(), finally Clear(). Also could use SsetIn(Out)DataPath() between different Execute()
DmpSim.Initialize()      # setup detector, user actions
DmpSim.SetOutDataName("electron.root")  # set output data name(*.root) for the next Execute(). If NOT set will use the default name(time stamp)
DmpSim.Execute(inMacPath+"DmpSim_electron.mac")
DmpSim.Execute(inMacPath+"DmpSim_proton.mac")     # start a new run, without delete physics list, detector construction and all user actions.
#DmpSim.Execute("visual")                # open visual mode, if you don't want to use batch mode as above(input a macro file name in Execute()).
DmpSim.Clear()




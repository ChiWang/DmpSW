#! /usr/bin/python
'''
 *  $Id: JobOpt_DmpRdc, 2014-03-09 14:55:50 chi $
 *  Author(s):
 *    Chi WANG (chiwang@mail.ustc.edu.cn) 07/03/2014
 *-----------------------------------------------------
 *  This is an example how to run simulation of DAMPE
 *-----------------------------------------------------
'''

# load lib. of DAMPE software
import os
import sys
if os.environ['DMPSWSYS'] not in sys.path:
    sys.path.append(os.getenv('DMPSWSYS')+'/lib')

import libDmpCore as DmpCore
import libDmpRdc as DmpRdc

# set phase
#DmpCore.PhaseManager.SetPhase(DmpCore.DmpEPhase.kQuarter)  # default is kProduct, if NOT set

    ##  where to find the macro file which is a argument of Execute(). If NOT set will use "./"
inDataPath="./"        # the test macro file DmpSim_electron(proton).mac installed in there
if not DmpRdc.SetInDataPath(inDataPath):
    print "Error: input data path not exist. %s" % inDataPath
    exit()

    ##  where to save the output. If NOT set at here will use "./"
DmpRdc.SetOutDataPath("./test")
    ##  where to find connector (cnct files)
DmpRdc.SetConnectorPath(DmpCore.DmpEDetectorID.kWhole,"")       # for whole dampe, there must has sub-directories Psd, Stk, Bgo, Nud under this path. If NOT set, will use /prefix/share/Connector/Product defaultly
#DmpRdc.SetConnectorPath(DmpCore.DmpEDetectorID.kPsd,"")       # special path for subDet

    ##  Start Rdc
DmpRdc.Initialize()     # load connectors, from connectors' path
DmpRdc.SetOutDataName("electronRDC.root")   # set output data name(*.root) for the next Execute(). If NOT set will use the default name(time stamp)
DmpRdc.Execute("BGO_ScienceData_20121003012321.dat")
DmpRdc.Execute("BGO_ScienceData_20121003012000.dat")      # convert another data, without delete the older connectors
DmpRdc.Clear()


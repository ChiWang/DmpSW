'''
 *  $Id: RawDataConversion.scons, 2014-03-07 15:26:28 chi $
 *  Author(s):
 *    Chi WANG (chiwang@mail.ustc.edu.cn) 13/12/2013
'''

import os
Import("*")     # import all vars from SConstruct
print "\t\t\t invoke %s\n" % os.path.abspath("./")
#--------------------------------------------------------------------

target='DmpRawDataConversion'
env = envBase.Clone()
useRoot(env)
#useCLHEP(env)
#useGeant4(env)
useBoostPython(env)
#useOpenMP(env)

# include
env.Prepend(CPPPATH='DmpRdc/include')
for key in subDetectors:
    includeDir=key+'/include'
    env.Prepend(CPPPATH=[includeDir])

# Use other top-1 package
#--------------------------------------------------------------------
    #+  Kernel
P1Path='../Kernel'
env.Prepend(CPPPATH=[P1Path+'/include'])
    #+  Event
P2Path='../Event'
env.Prepend(CPPPATH=P2Path+'/DmpEvent/include')
for key in subDetectors:
    includeDir=P2Path+"/"+key+'/include'
    env.Prepend(CPPPATH=[includeDir])

env.Prepend(LIBS=['DmpCore','DmpEvent'])
env.Prepend(LIBPATH=[P1Path,P2Path])

# install share
#--------------------------------------------------------------------
Default(Command(prefix+'/share/TestRelease/DmpRdcInput.infor','./share/DmpRdcInput.infor',Copy("$TARGET","$SOURCE")))
shareDir=prefix+"/share/Connector"
if not os.path.exists(shareDir):
    import shutil
    shutil.copytree("./share/Connector",shareDir)

# main build
#--------------------------------------------------------------------
#goal=env.Program(target,Glob('./*/src/*.cc'))
#Default(env.InstallAs(prefix+'/bin/'+target,goal))
goal=env.SharedLibrary(target,Glob('./*/src/*.cc'))
Default(env.InstallAs(prefix+"/lib/lib"+target+".so",goal))



'''
 *  $Id: Event.scons, 2014-03-07 15:26:06 chi $
 *  Author(s):
 *    Chi WANG (chiwang@mail.ustc.edu.cn) 24/07/2013
'''

import os
Import("*")     # import all vars from SConstruct
print "\t\t\t invoke %s\n" % os.path.abspath("./")
#--------------------------------------------------------------------

target='DmpEvent'
env = envBase.Clone()
useRoot(env)
#useCLHEP(env)
#useBoostPython(env)
#useOpenMP(env)

# include
env.Prepend(CPPPATH=target+'/include')
for key in subDetectors:
    includeDir=key+'/include'
    env.Prepend(CPPPATH=[includeDir])

# Use other top-1 package
#--------------------------------------------------------------------
    #+  Kernel
P1Path='../Kernel'
env.Prepend(CPPPATH=[P1Path+'/include'])

# install share
#--------------------------------------------------------------------
for key in subDetectors:
    includeDir=key+'/include'
    for file in os.listdir(includeDir):
        if "." not in file[0] and "LinkDef" not in file and "Dictionary" not in file:
            Default(Command(prefix+'/include/'+file,includeDir+'/'+file,Copy("$TARGET","$SOURCE")))

# main build
#--------------------------------------------------------------------
goal=env.SharedLibrary(target,Glob('./*/src/*.cc'))
Default(env.InstallAs(prefix+"/lib/lib"+target+".so",goal))



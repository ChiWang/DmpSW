#! /bin/bash
#=====================================================================
#   File:   createDictionary
#   Author: Chi WANG  (chiwang@mail.ustc.edu.cn)    11/12/2013
#---------------------------------------------------------------------
#   Description:
#   1.  Requirement
#       1.  must has 2 directories (include, src) at where you execute this script
#       2.  must have a file named *LinkDef* in ./include
#
#   Usage:
#   mode 1.  0 arguments
#       just do "./NameOfThisFile"
#   mode 2.  at least 2 arguments (LinkDef, header files)
#       do "./NameOfThisFile arguments"
#   *** for Kernel package, use mode 1
#
#   Reference:
#   1.  How to use rootcint
#       http://www.scons.org/doc/HTML/scons-user.html#chap-builders-writing
#       http://kalmanalignment.hepforge.org/svn/trunk/event/SConscript
#
#---------------------------------------------------------------------
#   History:
#                           Last update:  25/12/2013   21:25:23
#=====================================================================

includeDir="./include"
includeDir1="../../Kernel/include"
includeDir2="xxxx"
srcDir="./src"

if [ ! -d $includeDir ];then
    echo "Error:    do NOT have include directory: $includeDir..."
    exit 0
fi
if [ ! -d $srcDir ];then
    echo "Error:    do NOT have src directory: $srcDir..."
fi


if [ $# = 0 ];then
#+  $# = 0
#   use LinkDef.h in $includeDir, all the other header files as fileList
nLinkDef=0
for file in `ls $includeDir`;do
    if [[ $file =~ "LinkDef" && $file =~ ".h" ]];then
        linkDef=$file
        let nLinkDef=$nLinkDef+1
    else
        fileList="$fileList $file"
    fi
    if [ $nLinkDef = "2" ];then
        echo "Error:    there're $nLinkDef LinkDef.h files..."
        echo "must declare one LinkDef.h file and some header file as command arguments.."
        exit 0
    fi
done

else
#+  $# != 0
#   must input at least 2 arguments:
#   1st:    WhichLinkDef.h
#   2nd ~ $#:   header file list ()

while [ $# != 0 ];do
    if [[ $1 =~ "LinkDef" && $1 =~ ".h" ]];then
        linkDef=$1
    else
        fileList="$fileList $1"
    fi
    shift
done

fi

diction=`echo $linkDef | sed s/LinkDef//`
diction="Dictionary_${diction%.*}.cc"

if [ -f $srcDir/$diction ];then
    read -p   " Dictionary ($diction) is exist, delete it? (y/n):        " Ans
    if [ "XX$Ans" != "XXn" ];then
        \rm ./*/${diction%.*}* 2>/dev/null
        echo  "     Please re-execute \"$0\""
    fi
    exit 0      # can't execute rootcint just after \rm ....
fi

echo "Generating dictionary ${diction}..."
rootcint -f ${includeDir}/${diction} -c -p -I$includeDir -I$includeDir1 -I$includeDir2 $fileList $linkDef
mv $includeDir/$diction $srcDir/$diction 2>/dev/null

